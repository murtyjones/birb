version: 2.1
jobs:

  check:
    docker:
      - image: rustlang/rust:nightly
    working_directory: ~/birb/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-check-cache-{{ .Branch }}-{{ checksum "Cargo.lock" }} # Cache for the branch that you're on with this lockfile
            - v1-check-cache-{{ checksum "Cargo.lock" }} # If that doesn't exist, use the default cache across all branches with this lockfile
      - run: cargo check --all
      - save_cache:
          key: v1-check-cache-{{ .Branch }}-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - /usr/local/cargo
            - $HOME/.cargo/registry

  test-edgar-worker:
    docker:
      - image: rustlang/rust:nightly
    working_directory: ~/birb/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-edgar-cache-{{ .Branch }}-{{ checksum "Cargo.lock" }} # Cache for the branch that you're on with this lockfile
            - v1-edgar-cache-{{ checksum "Cargo.lock" }} # If that doesn't exist, use the default cache across all branches with this lockfile
      - attach_workspace:
          at: bb-cli-workspace

      - run:
          name: Test edgar worker
          command: cargo test -p edgar-worker

  test-server:
    docker:
      - image: rustlang/rust:nightly
    working_directory: ~/birb/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-server-cache-{{ .Branch }}-{{ checksum "Cargo.lock" }} # Cache for the branch that you're on with this lockfile
            - v1-server-cache-{{ checksum "Cargo.lock" }} # If that doesn't exist, use the default cache across all branches with this lockfile
      - attach_workspace:
          at: bb-cli-workspace
      - run:
          name: Test edgar worker
          command: cargo test -p server

  build-server:
    docker:
      - image: clux/muslrust:nightly
    working_directory: /volume
    steps:
      - checkout
      - run: echo 'export CACHE_VERSION="server-1' >> $BASH_ENV
      - restore_cache:
          keys:
            - cargo.registry.release-{{ .Environment.CACHE_VERSION }}
      - restore_cache:
          keys:
            - target.release-{{ .Environment.CACHE_VERSION }}
      - run: cargo build -p server --release
      - save_cache:
          key: target.release-{{ .Environment.CACHE_VERSION }}
          paths:
            - target
      - save_cache:
          key: cargo.registry.release-{{ .Environment.CACHE_VERSION }}
          paths:
            - /root/.cargo
      - persist_to_workspace:
          root: target/x86_64-unknown-linux-musl/release/
          paths:
            - .

  build-edgar-worker:
    docker:
      - image: clux/muslrust:nightly
    working_directory: /volume
    steps:
      - checkout
      - run: echo 'export CACHE_VERSION="edgar-worker-1' >> $BASH_ENV
      - restore_cache:
          keys:
            - cargo.registry.release-{{ .Environment.CACHE_VERSION }}
      - restore_cache:
          keys:
            - target.release-{{ .Environment.CACHE_VERSION }}
      - run: cargo build -p edgar-worker --release
      - save_cache:
          key: target.release-{{ .Environment.CACHE_VERSION }}
          paths:
            - target
      - save_cache:
          key: cargo.registry.release-{{ .Environment.CACHE_VERSION }}
          paths:
            - /root/.cargo
      - persist_to_workspace:
          root: target/x86_64-unknown-linux-musl/release/
          paths:
            - .

  deploy-server:
    machine: true
    working_directory: ~/birb/app
    steps:
      - checkout
      - attach_workspace:
          at: target/x86_64-unknown-linux-musl/release/
      - run:
          name: Upgrade AWS CLI Latest Version
          command: pip install --upgrade awscli
      - run:
          name: Push server to ECR
          command: scripts/push_server.sh

  deploy-edgar-worker:
    machine: true
    working_directory: ~/birb/app
    steps:
      - checkout
      - attach_workspace:
          at: target/x86_64-unknown-linux-musl/release/
      - run:
          name: Upgrade AWS CLI Latest Version
          command: pip install --upgrade awscli
      - run:
          name: Push server to ECR
          command: scripts/push_edgar_worker.sh

  deploy-app:
    working_directory: ~/birb/app
    docker:
      - image: circleci/node:8.9.0
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install dependencies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: npm test
      - run:
          name: Upgrade AWS CLI Latest Version
          command: pip install --upgrade awscli
      - run:
          name: Build and push app to S3, invalidate CloudFront cache
          command: scripts/push_www.sh

workflows:
  version: 2
  main:
    jobs:
      - check
      - test-server:
          requires:
            - check
      - test-edgar-worker:
          requires:
            - check
      - deploy-app:
          requires:
            - check
      - build-server:
          requires:
            - test-server
      - deploy-server:
          requires:
            - build-server
      - build-edgar-worker:
          requires:
            - test-edgar-worker
      - deploy-edgar-worker:
          requires:
            - build-edgar-worker
