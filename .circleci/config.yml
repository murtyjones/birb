version: 2.1
jobs:
  bb:
    machine: true
    steps:
      - restore_cache:
          keys:
            - v8-cargo-cache-{{ arch }}-{{ .Branch }} # Cache for the branch that you're on
            - v8-cargo-cache-{{ arch }}- # If that doesn't exist, use the default cache across all branches
      - run:
          name: Install Rust
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env
            rustup toolchain install nightly
            rustup default nightly
      - run:
          name: Install birb cli
          command: |
            source $HOME/.cargo/env
            cargo install --path crates/birb-cli --force
  test:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v8-cargo-cache-{{ arch }}-{{ .Branch }} # Cache for the branch that you're on
            - v8-cargo-cache-{{ arch }}- # If that doesn't exist, use the default cache across all branches
      - run:
          name: Run Tests
          command: bb test all
  deploy_api:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v8-cargo-cache-{{ arch }}-{{ .Branch }} # Cache for the branch that you're on
            - v8-cargo-cache-{{ arch }}- # If that doesn't exist, use the default cache across all branches
      - run:
          name: Upgrade AWS CLI Latest Version
          command: pip install --upgrade awscli
      - run:
          name: Build API Binary
          command: bb build api
      - run:
          name: Build Image and Push to ECS
          command: bb push api
      - save_cache:
          key: v8-cargo-cache-{{ arch }}-{{ .Branch }}
          paths:
            - target
            - /usr/local/cargo
            - /root/.cargo

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - bb
      - test:
          requires:
            - bb
      - deploy_api:
          requires:
            - test
